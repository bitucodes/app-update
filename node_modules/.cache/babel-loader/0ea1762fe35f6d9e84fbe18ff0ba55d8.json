{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nvar LocalModule = require(\"./LocalModule\");\nvar LocalModulesHelpers = exports;\nvar lookup = function lookup(parent, mod) {\n  if (mod.charAt(0) !== \".\") return mod;\n  var path = parent.split(\"/\");\n  var segs = mod.split(\"/\");\n  path.pop();\n  for (var i = 0; i < segs.length; i++) {\n    var seg = segs[i];\n    if (seg === \"..\") {\n      path.pop();\n    } else if (seg !== \".\") {\n      path.push(seg);\n    }\n  }\n  return path.join(\"/\");\n};\nLocalModulesHelpers.addLocalModule = function (state, name) {\n  if (!state.localModules) {\n    state.localModules = [];\n  }\n  var m = new LocalModule(state.module, name, state.localModules.length);\n  state.localModules.push(m);\n  return m;\n};\nLocalModulesHelpers.getLocalModule = function (state, name, namedModule) {\n  if (!state.localModules) return null;\n  if (namedModule) {\n    // resolve dependency name relative to the defining named module\n    name = lookup(namedModule, name);\n  }\n  for (var i = 0; i < state.localModules.length; i++) {\n    if (state.localModules[i].name === name) {\n      return state.localModules[i];\n    }\n  }\n  return null;\n};\nmodule.exports = LocalModulesHelpers;","map":null,"metadata":{},"sourceType":"script"}