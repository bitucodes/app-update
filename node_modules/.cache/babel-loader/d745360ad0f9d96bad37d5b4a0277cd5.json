{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthors Simen Brekken @simenbrekken, Einar LÃ¶ve @einarlove\n*/\n\n\"use strict\";\n\n/** @typedef {import(\"./Compiler\")} Compiler */\nvar _classCallCheck = require(\"/home/lenovo/Desktop/chatapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\nvar _createClass = require(\"/home/lenovo/Desktop/chatapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\nvar WebpackError = require(\"./WebpackError\");\nvar DefinePlugin = require(\"./DefinePlugin\");\nvar needsEnvVarFix = [\"8\", \"9\"].indexOf(process.versions.node.split(\".\")[0]) >= 0 && process.platform === \"win32\";\nvar EnvironmentPlugin = /*#__PURE__*/function () {\n  function EnvironmentPlugin() {\n    _classCallCheck(this, EnvironmentPlugin);\n    for (var _len = arguments.length, keys = new Array(_len), _key = 0; _key < _len; _key++) {\n      keys[_key] = arguments[_key];\n    }\n    if (keys.length === 1 && Array.isArray(keys[0])) {\n      this.keys = keys[0];\n      this.defaultValues = {};\n    } else if (keys.length === 1 && keys[0] && typeof keys[0] === \"object\") {\n      this.keys = Object.keys(keys[0]);\n      this.defaultValues = keys[0];\n    } else {\n      this.keys = keys;\n      this.defaultValues = {};\n    }\n  }\n\n  /**\n   * @param {Compiler} compiler webpack compiler instance\n   * @returns {void}\n   */\n  _createClass(EnvironmentPlugin, [{\n    key: \"apply\",\n    value: function apply(compiler) {\n      var _this = this;\n      var definitions = this.keys.reduce(function (defs, key) {\n        // TODO remove once the fix has made its way into Node 8.\n        // Work around https://github.com/nodejs/node/pull/18463,\n        // affecting Node 8 & 9 by performing an OS-level\n        // operation that always succeeds before reading\n        // environment variables:\n        if (needsEnvVarFix) require(\"os\").cpus();\n        var value = process.env[key] !== undefined ? process.env[key] : _this.defaultValues[key];\n        if (value === undefined) {\n          compiler.hooks.thisCompilation.tap(\"EnvironmentPlugin\", function (compilation) {\n            var error = new WebpackError(\"EnvironmentPlugin - \".concat(key, \" environment variable is undefined.\\n\\n\") + \"You can pass an object with default values to suppress this warning.\\n\" + \"See https://webpack.js.org/plugins/environment-plugin for example.\");\n            error.name = \"EnvVariableNotDefinedError\";\n            compilation.warnings.push(error);\n          });\n        }\n        defs[\"process.env.\".concat(key)] = value === undefined ? \"undefined\" : JSON.stringify(value);\n        return defs;\n      }, {});\n      new DefinePlugin(definitions).apply(compiler);\n    }\n  }]);\n  return EnvironmentPlugin;\n}();\nmodule.exports = EnvironmentPlugin;","map":null,"metadata":{},"sourceType":"script"}