{"ast":null,"code":"import React, { useRef, useState, useEffect } from 'react';\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n\n  _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nvar W3CWebSocket = require('websocket').w3cwebsocket;\n\nvar WebSocketNext = function WebSocketNext(props) {\n  var didMountRef = useRef(false);\n\n  var _useState = useState(new W3CWebSocket(props.url)),\n      ws = _useState[0],\n      setWS = _useState[1];\n\n  var _useState2 = useState(1),\n      attempts = _useState2[0],\n      setAttempts = _useState2[1];\n\n  var _useState3 = useState(props.reconnect),\n      reconnect = _useState3[0],\n      setReconnect = _useState3[1];\n\n  var _useState4 = useState(-1),\n      timeoutID = _useState4[0],\n      setTimeoutID = _useState4[1];\n\n  useEffect(function () {\n    if (!didMountRef.current) {\n      didMountRef.current = true;\n      setupWebsocket();\n    } else {\n      return function () {\n        setReconnect(false);\n        clearTimeout(timeoutID);\n        ws.close();\n      };\n    }\n  }, []);\n\n  var setupWebsocket = function setupWebsocket() {\n    ws.onopen = function () {\n      if (typeof props.onOpen === 'function') props.onOpen();\n    };\n\n    ws.onerror = function (e) {\n      if (typeof props.onError === 'function') props.onError(e);\n    };\n\n    ws.onmessage = function (evt) {\n      props.onMessage(evt.data);\n    };\n\n    ws.onclose = function (evt) {\n      if (typeof props.onClose === 'function') {\n        props.onClose(evt.code, evt.reason);\n      }\n\n      if (reconnect) {\n        var tid = setTimeout(function () {\n          setAttempts(attempts + 1);\n          setWS(new W3CWebSocket(props.url));\n          setupWebsocket();\n        }, props.reconnectIntervalInMilliSeconds || 3000);\n        setTimeoutID(tid);\n      }\n    };\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", null);\n};\n\nvar W3CWebSocket$1 = require('websocket').w3cwebsocket;\n\nvar WebSocket = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(WebSocket, _React$Component);\n\n  function WebSocket(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n    _this.state = {\n      ws: new W3CWebSocket$1(_this.props.url),\n      attempts: 1\n    };\n    _this.sendMessage = _this.sendMessage.bind(_assertThisInitialized(_this));\n    _this.setupWebsocket = _this.setupWebsocket.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  var _proto = WebSocket.prototype;\n\n  _proto.logging = function logging(logline) {\n    if (this.props.debug === true) {\n      console.log(logline);\n    }\n  };\n\n  _proto.generateInterval = function generateInterval(k) {\n    if (this.props.reconnectIntervalInMilliSeconds > 0) {\n      return this.props.reconnectIntervalInMilliSeconds;\n    }\n\n    return Math.min(30, Math.pow(2, k) - 1) * 1000;\n  };\n\n  _proto.setupWebsocket = function setupWebsocket() {\n    var _this2 = this;\n\n    var websocket = this.state.ws;\n\n    websocket.onopen = function () {\n      _this2.logging('Websocket connected...');\n\n      if (typeof _this2.props.onOpen === 'function') _this2.props.onOpen();\n    };\n\n    websocket.onerror = function (e) {\n      if (typeof _this2.props.onError === 'function') _this2.props.onError(e);\n    };\n\n    websocket.onmessage = function (evt) {\n      _this2.props.onMessage(evt.data);\n    };\n\n    this.shouldReconnect = this.props.reconnect;\n\n    websocket.onclose = function (evt) {\n      _this2.logging(\"Websocket disconnected,the reason: \" + evt.reason + \",the code: \" + evt.code);\n\n      if (typeof _this2.props.onClose === 'function') _this2.props.onClose(evt.code, evt.reason);\n\n      if (_this2.shouldReconnect) {\n        var time = _this2.generateInterval(_this2.state.attempts);\n\n        _this2.timeoutID = setTimeout(function () {\n          _this2.setState({\n            attempts: _this2.state.attempts + 1\n          });\n\n          _this2.setState({\n            ws: new W3CWebSocket$1(_this2.props.url)\n          });\n\n          _this2.setupWebsocket();\n        }, time);\n      }\n    };\n  };\n\n  _proto.componentDidMount = function componentDidMount() {\n    var childRef = this.props.childRef;\n    childRef && childRef(this);\n    this.setupWebsocket();\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    var childRef = this.props.childRef;\n    childRef && childRef(undefined);\n    this.shouldReconnect = false;\n    clearTimeout(this.timeoutID);\n    var websocket = this.state.ws;\n    websocket.close();\n  };\n\n  _proto.sendMessage = function sendMessage(message) {\n    var websocket = this.state.ws;\n    websocket.send(message);\n  };\n\n  _proto.render = function render() {\n    return /*#__PURE__*/React.createElement(\"div\", null);\n  };\n\n  return WebSocket;\n}(React.Component);\n\nexport { WebSocket, WebSocketNext };","map":{"version":3,"mappings":"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","names":["W3CWebSocket","require","w3cwebsocket","WebSocketNext","props","didMountRef","useRef","useState","url","ws","setWS","attempts","setAttempts","reconnect","setReconnect","timeoutID","setTimeoutID","useEffect","current","setupWebsocket","clearTimeout","close","onopen","onOpen","onerror","e","onError","onmessage","evt","onMessage","data","onclose","onClose","code","reason","tid","setTimeout","reconnectIntervalInMilliSeconds","React","WebSocket","_inheritsLoose","_this","state","sendMessage","bind","_assertThisInitialized","_proto","logging","logline","debug","console","log","generateInterval","k","Math","min","pow","websocket","_this2","shouldReconnect","time","setState","componentDidMount","childRef","componentWillUnmount","undefined","message","send","render","Component"],"sources":["/home/lenovo/Desktop/chatapp/node_modules/nextjs-websocket/src/socketNext.js","/home/lenovo/Desktop/chatapp/node_modules/nextjs-websocket/src/index.js"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react'\n\nvar W3CWebSocket = require('websocket').w3cwebsocket\n\nconst WebSocketNext = (props) => {\n  const didMountRef = useRef(false)\n  const [ws, setWS] = useState(new W3CWebSocket(props.url))\n  const [attempts, setAttempts] = useState(1)\n  const [reconnect, setReconnect] = useState(props.reconnect)\n  const [timeoutID, setTimeoutID] = useState(-1)\n\n  useEffect(() => {\n    if (!didMountRef.current) {\n      didMountRef.current = true\n      setupWebsocket()\n    } else {\n      return () => {\n        setReconnect(false)\n        clearTimeout(timeoutID)\n        ws.close()\n      }\n    }\n  }, [])\n\n  const setupWebsocket = () => {\n    ws.onopen = () => {\n      if (typeof props.onOpen === 'function') props.onOpen()\n    }\n    ws.onerror = (e) => {\n      if (typeof props.onError === 'function') props.onError(e)\n    }\n    ws.onmessage = (evt) => {\n      props.onMessage(evt.data)\n    }\n    ws.onclose = (evt) => {\n      if (typeof props.onClose === 'function') {\n        props.onClose(evt.code, evt.reason)\n      }\n      if (reconnect) {\n        const tid = setTimeout(() => {\n          setAttempts(attempts + 1)\n          setWS(new W3CWebSocket(props.url))\n          setupWebsocket()\n        }, props.reconnectIntervalInMilliSeconds || 3000)\n        setTimeoutID(tid)\n      }\n    }\n  }\n\n  return <div />\n}\n\nexport { WebSocketNext }\n","import React from 'react'\n\nimport { WebSocketNext } from './socketNext'\n\nvar W3CWebSocket = require('websocket').w3cwebsocket\n\nclass WebSocket extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      ws: new W3CWebSocket(this.props.url),\n      attempts: 1\n    }\n    this.sendMessage = this.sendMessage.bind(this)\n    this.setupWebsocket = this.setupWebsocket.bind(this)\n  }\n\n  logging(logline) {\n    if (this.props.debug === true) {\n      console.log(logline)\n    }\n  }\n\n  generateInterval(k) {\n    if (this.props.reconnectIntervalInMilliSeconds > 0) {\n      return this.props.reconnectIntervalInMilliSeconds\n    }\n    return Math.min(30, Math.pow(2, k) - 1) * 1000\n  }\n\n  setupWebsocket() {\n    let websocket = this.state.ws\n\n    websocket.onopen = () => {\n      this.logging('Websocket connected...')\n      if (typeof this.props.onOpen === 'function') this.props.onOpen()\n    }\n\n    websocket.onerror = (e) => {\n      if (typeof this.props.onError === 'function') this.props.onError(e)\n    }\n\n    websocket.onmessage = (evt) => {\n      this.props.onMessage(evt.data)\n    }\n\n    this.shouldReconnect = this.props.reconnect\n    websocket.onclose = (evt) => {\n      this.logging(\n        `Websocket disconnected,the reason: ${evt.reason},the code: ${evt.code}`\n      )\n      if (typeof this.props.onClose === 'function')\n        this.props.onClose(evt.code, evt.reason)\n      if (this.shouldReconnect) {\n        let time = this.generateInterval(this.state.attempts)\n        this.timeoutID = setTimeout(() => {\n          this.setState({ attempts: this.state.attempts + 1 })\n          this.setState({ ws: new W3CWebSocket(this.props.url) })\n          this.setupWebsocket()\n        }, time)\n      }\n    }\n  }\n\n  componentDidMount() {\n    const { childRef } = this.props\n    childRef && childRef(this)\n\n    this.setupWebsocket()\n  }\n\n  componentWillUnmount() {\n    const { childRef } = this.props\n    childRef && childRef(undefined)\n\n    this.shouldReconnect = false\n    clearTimeout(this.timeoutID)\n\n    let websocket = this.state.ws\n    websocket.close()\n  }\n\n  sendMessage(message) {\n    let websocket = this.state.ws\n    websocket.send(message)\n  }\n\n  render() {\n    return <div></div>\n  }\n}\n\nexport { WebSocket, WebSocketNext }\n"]},"metadata":{},"sourceType":"module"}