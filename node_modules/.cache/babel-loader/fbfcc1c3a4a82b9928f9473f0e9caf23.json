{"ast":null,"code":"/*\n MIT License http://www.opensource.org/licenses/mit-license.php\n Author Tobias Koppers @sokra\n */\n\"use strict\";\n\nvar _classCallCheck = require(\"/home/lenovo/Desktop/chatapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\nvar _createClass = require(\"/home/lenovo/Desktop/chatapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\nvar _possibleConstructorReturn = require(\"/home/lenovo/Desktop/chatapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\nvar _getPrototypeOf = require(\"/home/lenovo/Desktop/chatapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/getPrototypeOf\");\nvar _inherits = require(\"/home/lenovo/Desktop/chatapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\nvar _require = require(\"tapable\"),\n  Tapable = _require.Tapable,\n  HookMap = _require.HookMap,\n  SyncHook = _require.SyncHook,\n  SyncWaterfallHook = _require.SyncWaterfallHook;\nvar Factory = require(\"enhanced-resolve\").ResolverFactory;\nmodule.exports = /*#__PURE__*/function (_Tapable) {\n  _inherits(ResolverFactory, _Tapable);\n  function ResolverFactory() {\n    var _this;\n    _classCallCheck(this, ResolverFactory);\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ResolverFactory).call(this));\n    _this.hooks = {\n      resolveOptions: new HookMap(function () {\n        return new SyncWaterfallHook([\"resolveOptions\"]);\n      }),\n      resolver: new HookMap(function () {\n        return new SyncHook([\"resolver\", \"resolveOptions\"]);\n      })\n    };\n    _this._pluginCompat.tap(\"ResolverFactory\", function (options) {\n      var match;\n      match = /^resolve-options (.+)$/.exec(options.name);\n      if (match) {\n        _this.hooks.resolveOptions.tap(match[1], options.fn.name || \"unnamed compat plugin\", options.fn);\n        return true;\n      }\n      match = /^resolver (.+)$/.exec(options.name);\n      if (match) {\n        _this.hooks.resolver.tap(match[1], options.fn.name || \"unnamed compat plugin\", options.fn);\n        return true;\n      }\n    });\n    _this.cache1 = new WeakMap();\n    _this.cache2 = new Map();\n    return _this;\n  }\n  _createClass(ResolverFactory, [{\n    key: \"get\",\n    value: function get(type, resolveOptions) {\n      var cachedResolver = this.cache1.get(resolveOptions);\n      if (cachedResolver) return cachedResolver();\n      var ident = \"\".concat(type, \"|\").concat(JSON.stringify(resolveOptions));\n      var resolver = this.cache2.get(ident);\n      if (resolver) return resolver;\n      var newResolver = this._create(type, resolveOptions);\n      this.cache2.set(ident, newResolver);\n      return newResolver;\n    }\n  }, {\n    key: \"_create\",\n    value: function _create(type, resolveOptions) {\n      resolveOptions = this.hooks.resolveOptions.for(type).call(resolveOptions);\n      var resolver = Factory.createResolver(resolveOptions);\n      if (!resolver) {\n        throw new Error(\"No resolver created\");\n      }\n      this.hooks.resolver.for(type).call(resolver, resolveOptions);\n      return resolver;\n    }\n  }]);\n  return ResolverFactory;\n}(Tapable);","map":null,"metadata":{},"sourceType":"script"}