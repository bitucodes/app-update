{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nvar _classCallCheck = require(\"/home/lenovo/Desktop/chatapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\nvar _createClass = require(\"/home/lenovo/Desktop/chatapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\nvar ImportDependency = require(\"./ImportDependency\");\nvar ImportEagerDependency = require(\"./ImportEagerDependency\");\nvar ImportWeakDependency = require(\"./ImportWeakDependency\");\nvar ImportContextDependency = require(\"./ImportContextDependency\");\nvar ImportParserPlugin = require(\"./ImportParserPlugin\");\nvar ImportPlugin = /*#__PURE__*/function () {\n  function ImportPlugin(options) {\n    _classCallCheck(this, ImportPlugin);\n    this.options = options;\n  }\n  _createClass(ImportPlugin, [{\n    key: \"apply\",\n    value: function apply(compiler) {\n      var options = this.options;\n      compiler.hooks.compilation.tap(\"ImportPlugin\", function (compilation, _ref) {\n        var contextModuleFactory = _ref.contextModuleFactory,\n          normalModuleFactory = _ref.normalModuleFactory;\n        compilation.dependencyFactories.set(ImportDependency, normalModuleFactory);\n        compilation.dependencyTemplates.set(ImportDependency, new ImportDependency.Template());\n        compilation.dependencyFactories.set(ImportEagerDependency, normalModuleFactory);\n        compilation.dependencyTemplates.set(ImportEagerDependency, new ImportEagerDependency.Template());\n        compilation.dependencyFactories.set(ImportWeakDependency, normalModuleFactory);\n        compilation.dependencyTemplates.set(ImportWeakDependency, new ImportWeakDependency.Template());\n        compilation.dependencyFactories.set(ImportContextDependency, contextModuleFactory);\n        compilation.dependencyTemplates.set(ImportContextDependency, new ImportContextDependency.Template());\n        var handler = function handler(parser, parserOptions) {\n          if (parserOptions.import !== undefined && !parserOptions.import) return;\n          new ImportParserPlugin(options).apply(parser);\n        };\n        normalModuleFactory.hooks.parser.for(\"javascript/auto\").tap(\"ImportPlugin\", handler);\n        normalModuleFactory.hooks.parser.for(\"javascript/dynamic\").tap(\"ImportPlugin\", handler);\n        normalModuleFactory.hooks.parser.for(\"javascript/esm\").tap(\"ImportPlugin\", handler);\n      });\n    }\n  }]);\n  return ImportPlugin;\n}();\nmodule.exports = ImportPlugin;","map":null,"metadata":{},"sourceType":"script"}