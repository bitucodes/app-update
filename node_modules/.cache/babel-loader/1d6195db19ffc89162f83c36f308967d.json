{"ast":null,"code":"'use strict';\n\nvar childProcess = require('child_process'),\n  childModule = require.resolve('./child/index');\nfunction fork(forkModule, workerOptions) {\n  // suppress --debug / --inspect flags while preserving others (like --harmony)\n  var filteredArgs = process.execArgv.filter(function (v) {\n      return !/^--(debug|inspect)/.test(v);\n    }),\n    options = Object.assign({\n      execArgv: filteredArgs,\n      env: process.env,\n      cwd: process.cwd()\n    }, workerOptions),\n    child = childProcess.fork(childModule, process.argv, options);\n  child.on('error', function () {\n    // this *should* be picked up by onExit and the operation requeued\n  });\n  child.send({\n    owner: 'farm',\n    module: forkModule\n  });\n\n  // return a send() function for this child\n  return {\n    send: child.send.bind(child),\n    child: child\n  };\n}\nmodule.exports = fork;","map":null,"metadata":{},"sourceType":"script"}