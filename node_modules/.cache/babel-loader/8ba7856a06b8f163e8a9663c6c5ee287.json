{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nvar _classCallCheck = require(\"/home/lenovo/Desktop/chatapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\nvar _createClass = require(\"/home/lenovo/Desktop/chatapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\nvar forEachBail = require(\"./forEachBail\");\nvar getPaths = require(\"./getPaths\");\nmodule.exports = /*#__PURE__*/function () {\n  function ModulesInHierachicDirectoriesPlugin(source, directories, target) {\n    _classCallCheck(this, ModulesInHierachicDirectoriesPlugin);\n    this.source = source;\n    this.directories = [].concat(directories);\n    this.target = target;\n  }\n  _createClass(ModulesInHierachicDirectoriesPlugin, [{\n    key: \"apply\",\n    value: function apply(resolver) {\n      var _this = this;\n      var target = resolver.ensureHook(this.target);\n      resolver.getHook(this.source).tapAsync(\"ModulesInHierachicDirectoriesPlugin\", function (request, resolveContext, callback) {\n        var fs = resolver.fileSystem;\n        var addrs = getPaths(request.path).paths.map(function (p) {\n          return _this.directories.map(function (d) {\n            return resolver.join(p, d);\n          });\n        }).reduce(function (array, p) {\n          array.push.apply(array, p);\n          return array;\n        }, []);\n        forEachBail(addrs, function (addr, callback) {\n          fs.stat(addr, function (err, stat) {\n            if (!err && stat && stat.isDirectory()) {\n              var obj = Object.assign({}, request, {\n                path: addr,\n                request: \"./\" + request.request\n              });\n              var message = \"looking for modules in \" + addr;\n              return resolver.doResolve(target, obj, message, resolveContext, callback);\n            }\n            if (resolveContext.log) resolveContext.log(addr + \" doesn't exist or is not a directory\");\n            if (resolveContext.missing) resolveContext.missing.add(addr);\n            return callback();\n          });\n        }, callback);\n      });\n    }\n  }]);\n  return ModulesInHierachicDirectoriesPlugin;\n}();","map":null,"metadata":{},"sourceType":"script"}