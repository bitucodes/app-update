{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nvar _classCallCheck = require(\"/home/lenovo/Desktop/chatapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\nvar _createClass = require(\"/home/lenovo/Desktop/chatapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\nfunction getCacheId(request, withContext) {\n  return JSON.stringify({\n    context: withContext ? request.context : \"\",\n    path: request.path,\n    query: request.query,\n    request: request.request\n  });\n}\nmodule.exports = /*#__PURE__*/function () {\n  function UnsafeCachePlugin(source, filterPredicate, cache, withContext, target) {\n    _classCallCheck(this, UnsafeCachePlugin);\n    this.source = source;\n    this.filterPredicate = filterPredicate;\n    this.withContext = withContext;\n    this.cache = cache || {};\n    this.target = target;\n  }\n  _createClass(UnsafeCachePlugin, [{\n    key: \"apply\",\n    value: function apply(resolver) {\n      var _this = this;\n      var target = resolver.ensureHook(this.target);\n      resolver.getHook(this.source).tapAsync(\"UnsafeCachePlugin\", function (request, resolveContext, callback) {\n        if (!_this.filterPredicate(request)) return callback();\n        var cacheId = getCacheId(request, _this.withContext);\n        var cacheEntry = _this.cache[cacheId];\n        if (cacheEntry) {\n          return callback(null, cacheEntry);\n        }\n        resolver.doResolve(target, request, null, resolveContext, function (err, result) {\n          if (err) return callback(err);\n          if (result) return callback(null, _this.cache[cacheId] = result);\n          callback();\n        });\n      });\n    }\n  }]);\n  return UnsafeCachePlugin;\n}();","map":null,"metadata":{},"sourceType":"script"}