{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nvar _classCallCheck = require(\"/home/lenovo/Desktop/chatapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\nvar _createClass = require(\"/home/lenovo/Desktop/chatapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\nvar path = require(\"path\");\nmodule.exports = /*#__PURE__*/function () {\n  function MainFieldPlugin(source, options, target) {\n    _classCallCheck(this, MainFieldPlugin);\n    this.source = source;\n    this.options = options;\n    this.target = target;\n  }\n  _createClass(MainFieldPlugin, [{\n    key: \"apply\",\n    value: function apply(resolver) {\n      var _this = this;\n      var target = resolver.ensureHook(this.target);\n      resolver.getHook(this.source).tapAsync(\"MainFieldPlugin\", function (request, resolveContext, callback) {\n        if (request.path !== request.descriptionFileRoot) return callback();\n        if (request.alreadyTriedMainField === request.descriptionFilePath) return callback();\n        var content = request.descriptionFileData;\n        var filename = path.basename(request.descriptionFilePath);\n        var mainModule;\n        var field = _this.options.name;\n        if (Array.isArray(field)) {\n          var current = content;\n          for (var j = 0; j < field.length; j++) {\n            if (current === null || typeof current !== \"object\") {\n              current = null;\n              break;\n            }\n            current = current[field[j]];\n          }\n          if (typeof current === \"string\") {\n            mainModule = current;\n          }\n        } else {\n          if (typeof content[field] === \"string\") {\n            mainModule = content[field];\n          }\n        }\n        if (!mainModule) return callback();\n        if (_this.options.forceRelative && !/^\\.\\.?\\//.test(mainModule)) mainModule = \"./\" + mainModule;\n        var obj = Object.assign({}, request, {\n          request: mainModule,\n          alreadyTriedMainField: request.descriptionFilePath\n        });\n        return resolver.doResolve(target, obj, \"use \" + mainModule + \" from \" + _this.options.name + \" in \" + filename, resolveContext, callback);\n      });\n    }\n  }]);\n  return MainFieldPlugin;\n}();","map":null,"metadata":{},"sourceType":"script"}