{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nvar _classCallCheck = require(\"/home/lenovo/Desktop/chatapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\nvar _createClass = require(\"/home/lenovo/Desktop/chatapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\nvar concord = require(\"./concord\");\nvar DescriptionFileUtils = require(\"./DescriptionFileUtils\");\nvar forEachBail = require(\"./forEachBail\");\nmodule.exports = /*#__PURE__*/function () {\n  function ConcordExtensionsPlugin(source, options, target) {\n    _classCallCheck(this, ConcordExtensionsPlugin);\n    this.source = source;\n    this.options = options;\n    this.target = target;\n  }\n  _createClass(ConcordExtensionsPlugin, [{\n    key: \"apply\",\n    value: function apply(resolver) {\n      var target = resolver.ensureHook(this.target);\n      resolver.getHook(this.source).tapAsync(\"ConcordExtensionsPlugin\", function (request, resolveContext, callback) {\n        var concordField = DescriptionFileUtils.getField(request.descriptionFileData, \"concord\");\n        if (!concordField) return callback();\n        var extensions = concord.getExtensions(request.context, concordField);\n        if (!extensions) return callback();\n        forEachBail(extensions, function (appending, callback) {\n          var obj = Object.assign({}, request, {\n            path: request.path + appending,\n            relativePath: request.relativePath && request.relativePath + appending\n          });\n          resolver.doResolve(target, obj, \"concord extension: \" + appending, resolveContext, callback);\n        }, function (err, result) {\n          if (err) return callback(err);\n\n          // Don't allow other processing\n          if (result === undefined) return callback(null, null);\n          callback(null, result);\n        });\n      });\n    }\n  }]);\n  return ConcordExtensionsPlugin;\n}();","map":null,"metadata":{},"sourceType":"script"}