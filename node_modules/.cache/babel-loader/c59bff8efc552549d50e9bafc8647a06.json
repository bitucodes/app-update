{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\n/** @typedef {import(\"./Module\")} Module */\n/** @typedef {import(\"./Dependency\")} Dependency */\nvar _classCallCheck = require(\"/home/lenovo/Desktop/chatapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\nvar _createClass = require(\"/home/lenovo/Desktop/chatapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\nvar ModuleReason = /*#__PURE__*/function () {\n  /**\n   * @param {Module} module the referencing module\n   * @param {Dependency} dependency the referencing dependency\n   * @param {string=} explanation some extra detail\n   */\n  function ModuleReason(module, dependency, explanation) {\n    _classCallCheck(this, ModuleReason);\n    this.module = module;\n    this.dependency = dependency;\n    this.explanation = explanation;\n    this._chunks = null;\n  }\n  _createClass(ModuleReason, [{\n    key: \"hasChunk\",\n    value: function hasChunk(chunk) {\n      if (this._chunks) {\n        if (this._chunks.has(chunk)) return true;\n      } else if (this.module && this.module._chunks.has(chunk)) return true;\n      return false;\n    }\n  }, {\n    key: \"rewriteChunks\",\n    value: function rewriteChunks(oldChunk, newChunks) {\n      if (!this._chunks) {\n        if (this.module) {\n          if (!this.module._chunks.has(oldChunk)) return;\n          this._chunks = new Set(this.module._chunks);\n        } else {\n          this._chunks = new Set();\n        }\n      }\n      if (this._chunks.has(oldChunk)) {\n        this._chunks.delete(oldChunk);\n        for (var i = 0; i < newChunks.length; i++) {\n          this._chunks.add(newChunks[i]);\n        }\n      }\n    }\n  }]);\n  return ModuleReason;\n}();\nmodule.exports = ModuleReason;","map":null,"metadata":{},"sourceType":"script"}