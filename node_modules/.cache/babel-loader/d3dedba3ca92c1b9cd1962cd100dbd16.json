{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nvar _classCallCheck = require(\"/home/lenovo/Desktop/chatapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\nvar _createClass = require(\"/home/lenovo/Desktop/chatapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\nvar _possibleConstructorReturn = require(\"/home/lenovo/Desktop/chatapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\nvar _getPrototypeOf = require(\"/home/lenovo/Desktop/chatapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/getPrototypeOf\");\nvar _inherits = require(\"/home/lenovo/Desktop/chatapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\nvar _require = require(\"tapable\"),\n  Tapable = _require.Tapable,\n  SyncWaterfallHook = _require.SyncWaterfallHook,\n  SyncHook = _require.SyncHook;\n/** @typedef {import(\"./ModuleTemplate\")} ModuleTemplate */\n/** @typedef {import(\"./Chunk\")} Chunk */\n/** @typedef {import(\"./Module\")} Module} */\n/** @typedef {import(\"./Dependency\").DependencyTemplate} DependencyTemplate} */\n/** @typedef {import(\"./util/createHash\").Hash} Hash} */\n/**\n * @typedef {Object} RenderManifestOptions\n * @property {Chunk} chunk the chunk used to render\n * @property {string} hash\n * @property {string} fullHash\n * @property {TODO} outputOptions\n * @property {{javascript: ModuleTemplate, webassembly: ModuleTemplate}} moduleTemplates\n * @property {Map<TODO, TODO>} dependencyTemplates\n */\nmodule.exports = /*#__PURE__*/function (_Tapable) {\n  _inherits(ChunkTemplate, _Tapable);\n  function ChunkTemplate(outputOptions) {\n    var _this;\n    _classCallCheck(this, ChunkTemplate);\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ChunkTemplate).call(this));\n    _this.outputOptions = outputOptions || {};\n    _this.hooks = {\n      /** @type {SyncWaterfallHook<TODO[], RenderManifestOptions>} */\n      renderManifest: new SyncWaterfallHook([\"result\", \"options\"]),\n      modules: new SyncWaterfallHook([\"source\", \"chunk\", \"moduleTemplate\", \"dependencyTemplates\"]),\n      render: new SyncWaterfallHook([\"source\", \"chunk\", \"moduleTemplate\", \"dependencyTemplates\"]),\n      renderWithEntry: new SyncWaterfallHook([\"source\", \"chunk\"]),\n      hash: new SyncHook([\"hash\"]),\n      hashForChunk: new SyncHook([\"hash\", \"chunk\"])\n    };\n    return _this;\n  }\n\n  /**\n   *\n   * @param {RenderManifestOptions} options render manifest options\n   * @returns {TODO[]} returns render manifest\n   */\n  _createClass(ChunkTemplate, [{\n    key: \"getRenderManifest\",\n    value: function getRenderManifest(options) {\n      var result = [];\n      this.hooks.renderManifest.call(result, options);\n      return result;\n    }\n    /**\n     * Updates hash with information from this template\n     * @param {Hash} hash the hash to update\n     * @returns {void}\n     */\n  }, {\n    key: \"updateHash\",\n    value: function updateHash(hash) {\n      hash.update(\"ChunkTemplate\");\n      hash.update(\"2\");\n      this.hooks.hash.call(hash);\n    }\n    /**\n     * TODO webpack 5: remove moduleTemplate and dependencyTemplates\n     * Updates hash with chunk-specific information from this template\n     * @param {Hash} hash the hash to update\n     * @param {Chunk} chunk the chunk\n     * @param {ModuleTemplate} moduleTemplate ModuleTemplate instance for render\n     * @param {Map<Function, DependencyTemplate>} dependencyTemplates dependency templates\n     * @returns {void}\n     */\n  }, {\n    key: \"updateHashForChunk\",\n    value: function updateHashForChunk(hash, chunk, moduleTemplate, dependencyTemplates) {\n      this.updateHash(hash);\n      this.hooks.hashForChunk.call(hash, chunk);\n    }\n  }]);\n  return ChunkTemplate;\n}(Tapable);","map":null,"metadata":{},"sourceType":"script"}