{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nvar _classCallCheck = require(\"/home/lenovo/Desktop/chatapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\nvar _possibleConstructorReturn = require(\"/home/lenovo/Desktop/chatapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\nvar _getPrototypeOf = require(\"/home/lenovo/Desktop/chatapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/getPrototypeOf\");\nvar _inherits = require(\"/home/lenovo/Desktop/chatapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\nvar _assertThisInitialized = require(\"/home/lenovo/Desktop/chatapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/assertThisInitialized\");\nvar AsyncDependenciesBlock = require(\"../AsyncDependenciesBlock\");\nvar AMDRequireDependency = require(\"./AMDRequireDependency\");\nmodule.exports = /*#__PURE__*/function (_AsyncDependenciesBlo) {\n  _inherits(AMDRequireDependenciesBlock, _AsyncDependenciesBlo);\n  function AMDRequireDependenciesBlock(expr, arrayRange, functionRange, errorCallbackRange, module, loc, request) {\n    var _this;\n    _classCallCheck(this, AMDRequireDependenciesBlock);\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AMDRequireDependenciesBlock).call(this, null, module, loc, request));\n    _this.expr = expr;\n    _this.outerRange = expr.range;\n    _this.arrayRange = arrayRange;\n    _this.functionBindThis = false;\n    _this.functionRange = functionRange;\n    _this.errorCallbackBindThis = false;\n    _this.errorCallbackRange = errorCallbackRange;\n    _this.bindThis = true;\n    if (arrayRange && functionRange && errorCallbackRange) {\n      _this.range = [arrayRange[0], errorCallbackRange[1]];\n    } else if (arrayRange && functionRange) {\n      _this.range = [arrayRange[0], functionRange[1]];\n    } else if (arrayRange) {\n      _this.range = arrayRange;\n    } else if (functionRange) {\n      _this.range = functionRange;\n    } else {\n      _this.range = expr.range;\n    }\n    var dep = new AMDRequireDependency(_assertThisInitialized(_assertThisInitialized(_this)));\n    dep.loc = loc;\n    _this.addDependency(dep);\n    return _this;\n  }\n  return AMDRequireDependenciesBlock;\n}(AsyncDependenciesBlock);","map":null,"metadata":{},"sourceType":"script"}