{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nvar _slicedToArray = require(\"/home/lenovo/Desktop/chatapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/slicedToArray\");\nvar _classCallCheck = require(\"/home/lenovo/Desktop/chatapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\nvar _createClass = require(\"/home/lenovo/Desktop/chatapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\nvar _possibleConstructorReturn = require(\"/home/lenovo/Desktop/chatapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\nvar _getPrototypeOf = require(\"/home/lenovo/Desktop/chatapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/getPrototypeOf\");\nvar _inherits = require(\"/home/lenovo/Desktop/chatapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\nvar Generator = require(\"../Generator\");\nvar Template = require(\"../Template\");\nvar _require = require(\"webpack-sources\"),\n  RawSource = _require.RawSource;\nvar WebAssemblyImportDependency = require(\"../dependencies/WebAssemblyImportDependency\");\nvar WebAssemblyExportImportedDependency = require(\"../dependencies/WebAssemblyExportImportedDependency\");\n\n/** @typedef {import(\"../NormalModule\")} NormalModule */\n/** @typedef {import(\"../RuntimeTemplate\")} RuntimeTemplate */\n/** @typedef {import(\"webpack-sources\").Source} Source */\n/** @typedef {import(\"../Dependency\").DependencyTemplate} DependencyTemplate */\nvar WebAssemblyJavascriptGenerator = /*#__PURE__*/function (_Generator) {\n  _inherits(WebAssemblyJavascriptGenerator, _Generator);\n  function WebAssemblyJavascriptGenerator() {\n    _classCallCheck(this, WebAssemblyJavascriptGenerator);\n    return _possibleConstructorReturn(this, _getPrototypeOf(WebAssemblyJavascriptGenerator).apply(this, arguments));\n  }\n  _createClass(WebAssemblyJavascriptGenerator, [{\n    key: \"generate\",\n    /**\n     * @param {NormalModule} module module for which the code should be generated\n     * @param {Map<Function, DependencyTemplate>} dependencyTemplates mapping from dependencies to templates\n     * @param {RuntimeTemplate} runtimeTemplate the runtime template\n     * @param {string} type which kind of code should be generated\n     * @returns {Source} generated code\n     */\n    value: function generate(module, dependencyTemplates, runtimeTemplate, type) {\n      var initIdentifer = Array.isArray(module.usedExports) ? Template.numberToIdentifer(module.usedExports.length) : \"__webpack_init__\";\n      var needExportsCopy = false;\n      var importedModules = new Map();\n      var initParams = [];\n      var index = 0;\n      var _iterator = _createForOfIteratorHelper(module.dependencies),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var dep = _step.value;\n          var depAsAny = /** @type {any} */dep;\n          if (dep.module) {\n            var importData = importedModules.get(dep.module);\n            if (importData === undefined) {\n              importedModules.set(dep.module, importData = {\n                importVar: \"m\".concat(index),\n                index: index,\n                request: \"userRequest\" in depAsAny ? depAsAny.userRequest : undefined,\n                names: new Set(),\n                reexports: []\n              });\n              index++;\n            }\n            if (dep instanceof WebAssemblyImportDependency) {\n              importData.names.add(dep.name);\n              if (dep.description.type === \"GlobalType\") {\n                var exportName = dep.name;\n                var usedName = dep.module && dep.module.isUsed(exportName);\n                if (dep.module) {\n                  if (usedName) {\n                    initParams.push(runtimeTemplate.exportFromImport({\n                      module: dep.module,\n                      request: dep.request,\n                      importVar: importData.importVar,\n                      originModule: module,\n                      exportName: dep.name,\n                      asiSafe: true,\n                      isCall: false,\n                      callContext: null\n                    }));\n                  }\n                }\n              }\n            }\n            if (dep instanceof WebAssemblyExportImportedDependency) {\n              importData.names.add(dep.name);\n              var _usedName = module.isUsed(dep.exportName);\n              if (_usedName) {\n                var defineStatement = Template.asString([\"\".concat(module.exportsArgument, \"[\").concat(JSON.stringify(_usedName), \"] = \").concat(runtimeTemplate.exportFromImport({\n                  module: dep.module,\n                  request: dep.request,\n                  importVar: importData.importVar,\n                  originModule: module,\n                  exportName: dep.name,\n                  asiSafe: true,\n                  isCall: false,\n                  callContext: null\n                }), \";\")]);\n                importData.reexports.push(defineStatement);\n                needExportsCopy = true;\n              }\n            }\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n      var importsCode = Template.asString(Array.from(importedModules, function (_ref) {\n        var _ref2 = _slicedToArray(_ref, 2),\n          module = _ref2[0],\n          _ref2$ = _ref2[1],\n          importVar = _ref2$.importVar,\n          request = _ref2$.request,\n          reexports = _ref2$.reexports;\n        var importStatement = runtimeTemplate.importStatement({\n          module: module,\n          request: request,\n          importVar: importVar,\n          originModule: module\n        });\n        return importStatement + reexports.join(\"\\n\");\n      }));\n\n      // create source\n      var source = new RawSource(['\"use strict\";', \"// Instantiate WebAssembly module\", \"var wasmExports = __webpack_require__.w[module.i];\", !Array.isArray(module.usedExports) ? \"__webpack_require__.r(\".concat(module.exportsArgument, \");\") : \"\",\n      // this must be before import for circular dependencies\n      \"// export exports from WebAssembly module\", Array.isArray(module.usedExports) && !needExportsCopy ? \"\".concat(module.moduleArgument, \".exports = wasmExports;\") : \"for(var name in wasmExports) \" + \"if(name != \".concat(JSON.stringify(initIdentifer), \") \") + \"\".concat(module.exportsArgument, \"[name] = wasmExports[name];\"), \"// exec imports from WebAssembly module (for esm order)\", importsCode, \"\", \"// exec wasm module\", \"wasmExports[\".concat(JSON.stringify(initIdentifer), \"](\").concat(initParams.join(\", \"), \")\")].join(\"\\n\"));\n      return source;\n    }\n  }]);\n  return WebAssemblyJavascriptGenerator;\n}(Generator);\nmodule.exports = WebAssemblyJavascriptGenerator;","map":null,"metadata":{},"sourceType":"script"}