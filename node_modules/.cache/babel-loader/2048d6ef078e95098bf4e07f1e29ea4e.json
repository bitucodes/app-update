{"ast":null,"code":"var compactable = require('../compactable');\nfunction findComponentIn(shorthand, longhand) {\n  var comparator = nameComparator(longhand);\n  return findInDirectComponents(shorthand, comparator) || findInSubComponents(shorthand, comparator);\n}\nfunction nameComparator(to) {\n  return function (property) {\n    return to.name === property.name;\n  };\n}\nfunction findInDirectComponents(shorthand, comparator) {\n  return shorthand.components.filter(comparator)[0];\n}\nfunction findInSubComponents(shorthand, comparator) {\n  var shorthandComponent;\n  var longhandMatch;\n  var i, l;\n  if (!compactable[shorthand.name].shorthandComponents) {\n    return;\n  }\n  for (i = 0, l = shorthand.components.length; i < l; i++) {\n    shorthandComponent = shorthand.components[i];\n    longhandMatch = findInDirectComponents(shorthandComponent, comparator);\n    if (longhandMatch) {\n      return longhandMatch;\n    }\n  }\n  return;\n}\nmodule.exports = findComponentIn;","map":null,"metadata":{},"sourceType":"script"}