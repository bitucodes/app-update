{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\n/** @typedef {import(\"./Module\")} Module */\n/** @typedef {import(\"./DependenciesBlock\")} DependenciesBlock */\n\n/** @typedef {false | true | string[]} UsedExports */\nvar _classCallCheck = require(\"/home/lenovo/Desktop/chatapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\nvar _createClass = require(\"/home/lenovo/Desktop/chatapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\nvar addToSet = function addToSet(a, b) {\n  var _iterator = _createForOfIteratorHelper(b),\n    _step;\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var item = _step.value;\n      if (!a.includes(item)) a.push(item);\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n  return a;\n};\nvar isSubset = function isSubset(biggerSet, subset) {\n  if (biggerSet === true) return true;\n  if (subset === true) return false;\n  return subset.every(function (item) {\n    return biggerSet.indexOf(item) >= 0;\n  });\n};\nvar FlagDependencyUsagePlugin = /*#__PURE__*/function () {\n  function FlagDependencyUsagePlugin() {\n    _classCallCheck(this, FlagDependencyUsagePlugin);\n  }\n  _createClass(FlagDependencyUsagePlugin, [{\n    key: \"apply\",\n    value: function apply(compiler) {\n      compiler.hooks.compilation.tap(\"FlagDependencyUsagePlugin\", function (compilation) {\n        compilation.hooks.optimizeDependencies.tap(\"FlagDependencyUsagePlugin\", function (modules) {\n          var processModule = function processModule(module, usedExports) {\n            module.used = true;\n            if (module.usedExports === true) return;\n            if (usedExports === true) {\n              module.usedExports = true;\n            } else if (Array.isArray(usedExports)) {\n              var old = module.usedExports ? module.usedExports.length : -1;\n              module.usedExports = addToSet(module.usedExports || [], usedExports);\n              if (module.usedExports.length === old) {\n                return;\n              }\n            } else if (Array.isArray(module.usedExports)) {\n              return;\n            } else {\n              module.usedExports = false;\n            }\n\n            // for a module without side effects we stop tracking usage here when no export is used\n            // This module won't be evaluated in this case\n            if (module.factoryMeta.sideEffectFree) {\n              if (module.usedExports === false) return;\n              if (Array.isArray(module.usedExports) && module.usedExports.length === 0) return;\n            }\n            queue.push([module, module, module.usedExports]);\n          };\n          var processDependenciesBlock = function processDependenciesBlock(module, depBlock, usedExports) {\n            var _iterator2 = _createForOfIteratorHelper(depBlock.dependencies),\n              _step2;\n            try {\n              for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n                var dep = _step2.value;\n                processDependency(module, dep);\n              }\n            } catch (err) {\n              _iterator2.e(err);\n            } finally {\n              _iterator2.f();\n            }\n            var _iterator3 = _createForOfIteratorHelper(depBlock.variables),\n              _step3;\n            try {\n              for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n                var variable = _step3.value;\n                var _iterator5 = _createForOfIteratorHelper(variable.dependencies),\n                  _step5;\n                try {\n                  for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n                    var _dep = _step5.value;\n                    processDependency(module, _dep);\n                  }\n                } catch (err) {\n                  _iterator5.e(err);\n                } finally {\n                  _iterator5.f();\n                }\n              }\n            } catch (err) {\n              _iterator3.e(err);\n            } finally {\n              _iterator3.f();\n            }\n            var _iterator4 = _createForOfIteratorHelper(depBlock.blocks),\n              _step4;\n            try {\n              for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n                var block = _step4.value;\n                queue.push([module, block, usedExports]);\n              }\n            } catch (err) {\n              _iterator4.e(err);\n            } finally {\n              _iterator4.f();\n            }\n          };\n          var processDependency = function processDependency(module, dep) {\n            var reference = compilation.getDependencyReference(module, dep);\n            if (!reference) return;\n            var referenceModule = reference.module;\n            var importedNames = reference.importedNames;\n            var oldUsed = referenceModule.used;\n            var oldUsedExports = referenceModule.usedExports;\n            if (!oldUsed || importedNames && (!oldUsedExports || !isSubset(oldUsedExports, importedNames))) {\n              processModule(referenceModule, importedNames);\n            }\n          };\n          var _iterator6 = _createForOfIteratorHelper(modules),\n            _step6;\n          try {\n            for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n              var _module = _step6.value;\n              _module.used = false;\n            }\n\n            /** @type {[Module, DependenciesBlock, UsedExports][]} */\n          } catch (err) {\n            _iterator6.e(err);\n          } finally {\n            _iterator6.f();\n          }\n          var queue = [];\n          var _iterator7 = _createForOfIteratorHelper(compilation._preparedEntrypoints),\n            _step7;\n          try {\n            for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n              var preparedEntrypoint = _step7.value;\n              if (preparedEntrypoint.module) {\n                processModule(preparedEntrypoint.module, true);\n              }\n            }\n          } catch (err) {\n            _iterator7.e(err);\n          } finally {\n            _iterator7.f();\n          }\n          while (queue.length) {\n            var queueItem = queue.pop();\n            processDependenciesBlock(queueItem[0], queueItem[1], queueItem[2]);\n          }\n        });\n      });\n    }\n  }]);\n  return FlagDependencyUsagePlugin;\n}();\nmodule.exports = FlagDependencyUsagePlugin;","map":null,"metadata":{},"sourceType":"script"}