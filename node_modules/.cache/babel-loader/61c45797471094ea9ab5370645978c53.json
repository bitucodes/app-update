{"ast":null,"code":"var mergeIntoShorthands = require('./merge-into-shorthands');\nvar overrideProperties = require('./override-properties');\nvar populateComponents = require('./populate-components');\nvar restoreWithComponents = require('../restore-with-components');\nvar wrapForOptimizing = require('../../wrap-for-optimizing').all;\nvar removeUnused = require('../../remove-unused');\nvar restoreFromOptimizing = require('../../restore-from-optimizing');\nvar OptimizationLevel = require('../../../options/optimization-level').OptimizationLevel;\nfunction optimizeProperties(properties, withOverriding, withMerging, context) {\n  var levelOptions = context.options.level[OptimizationLevel.Two];\n  var _properties = wrapForOptimizing(properties, false, levelOptions.skipProperties);\n  var _property;\n  var i, l;\n  populateComponents(_properties, context.validator, context.warnings);\n  for (i = 0, l = _properties.length; i < l; i++) {\n    _property = _properties[i];\n    if (_property.block) {\n      optimizeProperties(_property.value[0][1], withOverriding, withMerging, context);\n    }\n  }\n  if (withMerging && levelOptions.mergeIntoShorthands) {\n    mergeIntoShorthands(_properties, context.validator);\n  }\n  if (withOverriding && levelOptions.overrideProperties) {\n    overrideProperties(_properties, withMerging, context.options.compatibility, context.validator);\n  }\n  restoreFromOptimizing(_properties, restoreWithComponents);\n  removeUnused(_properties);\n}\nmodule.exports = optimizeProperties;","map":null,"metadata":{},"sourceType":"script"}