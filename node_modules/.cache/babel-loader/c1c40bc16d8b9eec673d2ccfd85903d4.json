{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nvar _classCallCheck = require(\"/home/lenovo/Desktop/chatapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\nvar _createClass = require(\"/home/lenovo/Desktop/chatapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\nvar ParserHelpers = require(\"./ParserHelpers\");\nvar ConstDependency = require(\"./dependencies/ConstDependency\");\nvar NullFactory = require(\"./NullFactory\");\nvar ProvidePlugin = /*#__PURE__*/function () {\n  function ProvidePlugin(definitions) {\n    _classCallCheck(this, ProvidePlugin);\n    this.definitions = definitions;\n  }\n  _createClass(ProvidePlugin, [{\n    key: \"apply\",\n    value: function apply(compiler) {\n      var definitions = this.definitions;\n      compiler.hooks.compilation.tap(\"ProvidePlugin\", function (compilation, _ref) {\n        var normalModuleFactory = _ref.normalModuleFactory;\n        compilation.dependencyFactories.set(ConstDependency, new NullFactory());\n        compilation.dependencyTemplates.set(ConstDependency, new ConstDependency.Template());\n        var handler = function handler(parser, parserOptions) {\n          Object.keys(definitions).forEach(function (name) {\n            var request = [].concat(definitions[name]);\n            var splittedName = name.split(\".\");\n            if (splittedName.length > 0) {\n              splittedName.slice(1).forEach(function (_, i) {\n                var name = splittedName.slice(0, i + 1).join(\".\");\n                parser.hooks.canRename.for(name).tap(\"ProvidePlugin\", ParserHelpers.approve);\n              });\n            }\n            parser.hooks.expression.for(name).tap(\"ProvidePlugin\", function (expr) {\n              var nameIdentifier = name;\n              var scopedName = name.includes(\".\");\n              var expression = \"require(\".concat(JSON.stringify(request[0]), \")\");\n              if (scopedName) {\n                nameIdentifier = \"__webpack_provided_\".concat(name.replace(/\\./g, \"_dot_\"));\n              }\n              if (request.length > 1) {\n                expression += request.slice(1).map(function (r) {\n                  return \"[\".concat(JSON.stringify(r), \"]\");\n                }).join(\"\");\n              }\n              if (!ParserHelpers.addParsedVariableToModule(parser, nameIdentifier, expression)) {\n                return false;\n              }\n              if (scopedName) {\n                ParserHelpers.toConstantDependency(parser, nameIdentifier)(expr);\n              }\n              return true;\n            });\n          });\n        };\n        normalModuleFactory.hooks.parser.for(\"javascript/auto\").tap(\"ProvidePlugin\", handler);\n        normalModuleFactory.hooks.parser.for(\"javascript/dynamic\").tap(\"ProvidePlugin\", handler);\n        normalModuleFactory.hooks.parser.for(\"javascript/esm\").tap(\"ProvidePlugin\", handler);\n      });\n    }\n  }]);\n  return ProvidePlugin;\n}();\nmodule.exports = ProvidePlugin;","map":null,"metadata":{},"sourceType":"script"}