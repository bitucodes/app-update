{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nvar _classCallCheck = require(\"/home/lenovo/Desktop/chatapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\nvar _createClass = require(\"/home/lenovo/Desktop/chatapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\nvar _possibleConstructorReturn = require(\"/home/lenovo/Desktop/chatapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\nvar _getPrototypeOf = require(\"/home/lenovo/Desktop/chatapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/getPrototypeOf\");\nvar _inherits = require(\"/home/lenovo/Desktop/chatapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\nvar asyncLib = require(\"neo-async\");\nvar path = require(\"path\");\nvar _require = require(\"tapable\"),\n  Tapable = _require.Tapable,\n  AsyncSeriesWaterfallHook = _require.AsyncSeriesWaterfallHook,\n  SyncWaterfallHook = _require.SyncWaterfallHook;\nvar ContextModule = require(\"./ContextModule\");\nvar ContextElementDependency = require(\"./dependencies/ContextElementDependency\");\n\n/** @typedef {import(\"./Module\")} Module */\n\nvar EMPTY_RESOLVE_OPTIONS = {};\nmodule.exports = /*#__PURE__*/function (_Tapable) {\n  _inherits(ContextModuleFactory, _Tapable);\n  function ContextModuleFactory(resolverFactory) {\n    var _this;\n    _classCallCheck(this, ContextModuleFactory);\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ContextModuleFactory).call(this));\n    _this.hooks = {\n      /** @type {AsyncSeriesWaterfallHook<TODO>} */\n      beforeResolve: new AsyncSeriesWaterfallHook([\"data\"]),\n      /** @type {AsyncSeriesWaterfallHook<TODO>} */\n      afterResolve: new AsyncSeriesWaterfallHook([\"data\"]),\n      /** @type {SyncWaterfallHook<string[]>} */\n      contextModuleFiles: new SyncWaterfallHook([\"files\"]),\n      /** @type {SyncWaterfallHook<TODO[]>} */\n      alternatives: new AsyncSeriesWaterfallHook([\"modules\"])\n    };\n    _this._pluginCompat.tap(\"ContextModuleFactory\", function (options) {\n      switch (options.name) {\n        case \"before-resolve\":\n        case \"after-resolve\":\n        case \"alternatives\":\n          options.async = true;\n          break;\n      }\n    });\n    _this.resolverFactory = resolverFactory;\n    return _this;\n  }\n  _createClass(ContextModuleFactory, [{\n    key: \"create\",\n    value: function create(data, callback) {\n      var _this2 = this;\n      var context = data.context;\n      var dependencies = data.dependencies;\n      var resolveOptions = data.resolveOptions;\n      var dependency = dependencies[0];\n      this.hooks.beforeResolve.callAsync(Object.assign({\n        context: context,\n        dependencies: dependencies,\n        resolveOptions: resolveOptions\n      }, dependency.options), function (err, beforeResolveResult) {\n        if (err) return callback(err);\n\n        // Ignored\n        if (!beforeResolveResult) return callback();\n        var context = beforeResolveResult.context;\n        var request = beforeResolveResult.request;\n        var resolveOptions = beforeResolveResult.resolveOptions;\n        var loaders,\n          resource,\n          loadersPrefix = \"\";\n        var idx = request.lastIndexOf(\"!\");\n        if (idx >= 0) {\n          var loadersRequest = request.substr(0, idx + 1);\n          var i;\n          for (i = 0; i < loadersRequest.length && loadersRequest[i] === \"!\"; i++) {\n            loadersPrefix += \"!\";\n          }\n          loadersRequest = loadersRequest.substr(i).replace(/!+$/, \"\").replace(/!!+/g, \"!\");\n          if (loadersRequest === \"\") {\n            loaders = [];\n          } else {\n            loaders = loadersRequest.split(\"!\");\n          }\n          resource = request.substr(idx + 1);\n        } else {\n          loaders = [];\n          resource = request;\n        }\n        var contextResolver = _this2.resolverFactory.get(\"context\", resolveOptions || EMPTY_RESOLVE_OPTIONS);\n        var loaderResolver = _this2.resolverFactory.get(\"loader\", EMPTY_RESOLVE_OPTIONS);\n        asyncLib.parallel([function (callback) {\n          contextResolver.resolve({}, context, resource, {}, function (err, result) {\n            if (err) return callback(err);\n            callback(null, result);\n          });\n        }, function (callback) {\n          asyncLib.map(loaders, function (loader, callback) {\n            loaderResolver.resolve({}, context, loader, {}, function (err, result) {\n              if (err) return callback(err);\n              callback(null, result);\n            });\n          }, callback);\n        }], function (err, result) {\n          if (err) return callback(err);\n          _this2.hooks.afterResolve.callAsync(Object.assign({\n            addon: loadersPrefix + result[1].join(\"!\") + (result[1].length > 0 ? \"!\" : \"\"),\n            resource: result[0],\n            resolveDependencies: _this2.resolveDependencies.bind(_this2)\n          }, beforeResolveResult), function (err, result) {\n            if (err) return callback(err);\n\n            // Ignored\n            if (!result) return callback();\n            return callback(null, new ContextModule(result.resolveDependencies, result));\n          });\n        });\n      });\n    }\n  }, {\n    key: \"resolveDependencies\",\n    value: function resolveDependencies(fs, options, callback) {\n      var _this3 = this;\n      var cmf = this;\n      var resource = options.resource;\n      var resourceQuery = options.resourceQuery;\n      var recursive = options.recursive;\n      var regExp = options.regExp;\n      var include = options.include;\n      var exclude = options.exclude;\n      if (!regExp || !resource) return callback(null, []);\n      var addDirectory = function addDirectory(directory, callback) {\n        fs.readdir(directory, function (err, files) {\n          if (err) return callback(err);\n          files = cmf.hooks.contextModuleFiles.call(files);\n          if (!files || files.length === 0) return callback(null, []);\n          asyncLib.map(files.filter(function (p) {\n            return p.indexOf(\".\") !== 0;\n          }), function (segment, callback) {\n            var subResource = path.join(directory, segment);\n            if (!exclude || !subResource.match(exclude)) {\n              fs.stat(subResource, function (err, stat) {\n                if (err) {\n                  if (err.code === \"ENOENT\") {\n                    // ENOENT is ok here because the file may have been deleted between\n                    // the readdir and stat calls.\n                    return callback();\n                  } else {\n                    return callback(err);\n                  }\n                }\n                if (stat.isDirectory()) {\n                  if (!recursive) return callback();\n                  addDirectory.call(_this3, subResource, callback);\n                } else if (stat.isFile() && (!include || subResource.match(include))) {\n                  var obj = {\n                    context: resource,\n                    request: \".\" + subResource.substr(resource.length).replace(/\\\\/g, \"/\")\n                  };\n                  _this3.hooks.alternatives.callAsync([obj], function (err, alternatives) {\n                    if (err) return callback(err);\n                    alternatives = alternatives.filter(function (obj) {\n                      return regExp.test(obj.request);\n                    }).map(function (obj) {\n                      var dep = new ContextElementDependency(obj.request + resourceQuery, obj.request);\n                      dep.optional = true;\n                      return dep;\n                    });\n                    callback(null, alternatives);\n                  });\n                } else {\n                  callback();\n                }\n              });\n            } else {\n              callback();\n            }\n          }, function (err, result) {\n            if (err) return callback(err);\n            if (!result) return callback(null, []);\n            callback(null, result.filter(Boolean).reduce(function (a, i) {\n              return a.concat(i);\n            }, []));\n          });\n        });\n      };\n      addDirectory(resource, callback);\n    }\n  }]);\n  return ContextModuleFactory;\n}(Tapable);","map":null,"metadata":{},"sourceType":"script"}