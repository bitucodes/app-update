{"ast":null,"code":"var Hack = require('./hack');\nvar Marker = require('../tokenizer/marker');\nvar ASTERISK_HACK = '*';\nvar BACKSLASH_HACK = '\\\\';\nvar IMPORTANT_TOKEN = '!important';\nvar UNDERSCORE_HACK = '_';\nvar BANG_HACK = '!ie';\nfunction restoreFromOptimizing(properties, restoreCallback) {\n  var property;\n  var restored;\n  var current;\n  var i;\n  for (i = properties.length - 1; i >= 0; i--) {\n    property = properties[i];\n    if (property.unused) {\n      continue;\n    }\n    if (!property.dirty && !property.important && !property.hack) {\n      continue;\n    }\n    if (restoreCallback) {\n      restored = restoreCallback(property);\n      property.value = restored;\n    } else {\n      restored = property.value;\n    }\n    if (property.important) {\n      restoreImportant(property);\n    }\n    if (property.hack) {\n      restoreHack(property);\n    }\n    if ('all' in property) {\n      current = property.all[property.position];\n      current[1][1] = property.name;\n      current.splice(2, current.length - 1);\n      Array.prototype.push.apply(current, restored);\n    }\n  }\n}\nfunction restoreImportant(property) {\n  property.value[property.value.length - 1][1] += IMPORTANT_TOKEN;\n}\nfunction restoreHack(property) {\n  if (property.hack[0] == Hack.UNDERSCORE) {\n    property.name = UNDERSCORE_HACK + property.name;\n  } else if (property.hack[0] == Hack.ASTERISK) {\n    property.name = ASTERISK_HACK + property.name;\n  } else if (property.hack[0] == Hack.BACKSLASH) {\n    property.value[property.value.length - 1][1] += BACKSLASH_HACK + property.hack[1];\n  } else if (property.hack[0] == Hack.BANG) {\n    property.value[property.value.length - 1][1] += Marker.SPACE + BANG_HACK;\n  }\n}\nmodule.exports = restoreFromOptimizing;","map":null,"metadata":{},"sourceType":"script"}