{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nvar _classCallCheck = require(\"/home/lenovo/Desktop/chatapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\nvar _createClass = require(\"/home/lenovo/Desktop/chatapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\nvar WasmMainTemplatePlugin = require(\"../wasm/WasmMainTemplatePlugin\");\nvar FetchCompileWasmTemplatePlugin = /*#__PURE__*/function () {\n  function FetchCompileWasmTemplatePlugin(options) {\n    _classCallCheck(this, FetchCompileWasmTemplatePlugin);\n    this.options = options || {};\n  }\n  _createClass(FetchCompileWasmTemplatePlugin, [{\n    key: \"apply\",\n    value: function apply(compiler) {\n      var _this = this;\n      compiler.hooks.thisCompilation.tap(\"FetchCompileWasmTemplatePlugin\", function (compilation) {\n        var mainTemplate = compilation.mainTemplate;\n        var generateLoadBinaryCode = function generateLoadBinaryCode(path) {\n          return \"fetch(\".concat(mainTemplate.requireFn, \".p + \").concat(path, \")\");\n        };\n        var plugin = new WasmMainTemplatePlugin(Object.assign({\n          generateLoadBinaryCode: generateLoadBinaryCode,\n          supportsStreaming: true\n        }, _this.options));\n        plugin.apply(mainTemplate);\n      });\n    }\n  }]);\n  return FetchCompileWasmTemplatePlugin;\n}();\nmodule.exports = FetchCompileWasmTemplatePlugin;","map":null,"metadata":{},"sourceType":"script"}