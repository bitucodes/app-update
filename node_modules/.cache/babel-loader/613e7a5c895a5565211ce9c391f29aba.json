{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nvar _classCallCheck = require(\"/home/lenovo/Desktop/chatapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\nvar _createClass = require(\"/home/lenovo/Desktop/chatapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\nvar _require = require(\"webpack-sources\"),\n  RawSource = _require.RawSource;\nvar ModuleFilenameHelpers = require(\"./ModuleFilenameHelpers\");\nvar cache = new WeakMap();\nvar EvalSourceMapDevToolModuleTemplatePlugin = /*#__PURE__*/function () {\n  function EvalSourceMapDevToolModuleTemplatePlugin(compilation, options) {\n    _classCallCheck(this, EvalSourceMapDevToolModuleTemplatePlugin);\n    this.compilation = compilation;\n    this.sourceMapComment = options.append || \"//# sourceURL=[module]\\n//# sourceMappingURL=[url]\";\n    this.moduleFilenameTemplate = options.moduleFilenameTemplate || \"webpack://[namespace]/[resource-path]?[hash]\";\n    this.namespace = options.namespace || \"\";\n    this.options = options;\n  }\n  _createClass(EvalSourceMapDevToolModuleTemplatePlugin, [{\n    key: \"apply\",\n    value: function apply(moduleTemplate) {\n      var self = this;\n      var options = this.options;\n      var matchModule = ModuleFilenameHelpers.matchObject.bind(ModuleFilenameHelpers, options);\n      moduleTemplate.hooks.module.tap(\"EvalSourceMapDevToolModuleTemplatePlugin\", function (source, module) {\n        var cachedSource = cache.get(source);\n        if (cachedSource !== undefined) {\n          return cachedSource;\n        }\n        if (!matchModule(module.resource)) {\n          return source;\n        }\n\n        /** @type {{ [key: string]: TODO; }} */\n        var sourceMap;\n        var content;\n        if (source.sourceAndMap) {\n          var sourceAndMap = source.sourceAndMap(options);\n          sourceMap = sourceAndMap.map;\n          content = sourceAndMap.source;\n        } else {\n          sourceMap = source.map(options);\n          content = source.source();\n        }\n        if (!sourceMap) {\n          return source;\n        }\n\n        // Clone (flat) the sourcemap to ensure that the mutations below do not persist.\n        sourceMap = Object.keys(sourceMap).reduce(function (obj, key) {\n          obj[key] = sourceMap[key];\n          return obj;\n        }, {});\n        var modules = sourceMap.sources.map(function (source) {\n          var module = self.compilation.findModule(source);\n          return module || source;\n        });\n        var moduleFilenames = modules.map(function (module) {\n          return ModuleFilenameHelpers.createFilename(module, {\n            moduleFilenameTemplate: self.moduleFilenameTemplate,\n            namespace: self.namespace\n          }, moduleTemplate.runtimeTemplate.requestShortener);\n        });\n        moduleFilenames = ModuleFilenameHelpers.replaceDuplicates(moduleFilenames, function (filename, i, n) {\n          for (var j = 0; j < n; j++) {\n            filename += \"*\";\n          }\n          return filename;\n        });\n        sourceMap.sources = moduleFilenames;\n        sourceMap.sourceRoot = options.sourceRoot || \"\";\n        sourceMap.file = \"\".concat(module.id, \".js\");\n        var footer = self.sourceMapComment.replace(/\\[url\\]/g, \"data:application/json;charset=utf-8;base64,\".concat(Buffer.from(JSON.stringify(sourceMap), \"utf8\").toString(\"base64\"))) + \"\\n//# sourceURL=webpack-internal:///\".concat(module.id, \"\\n\"); // workaround for chrome bug\n\n        var evalSource = new RawSource(\"eval(\".concat(JSON.stringify(content + footer), \");\"));\n        cache.set(source, evalSource);\n        return evalSource;\n      });\n      moduleTemplate.hooks.hash.tap(\"EvalSourceMapDevToolModuleTemplatePlugin\", function (hash) {\n        hash.update(\"eval-source-map\");\n        hash.update(\"2\");\n      });\n    }\n  }]);\n  return EvalSourceMapDevToolModuleTemplatePlugin;\n}();\nmodule.exports = EvalSourceMapDevToolModuleTemplatePlugin;","map":null,"metadata":{},"sourceType":"script"}