{"ast":null,"code":"/*\n MIT License http://www.opensource.org/licenses/mit-license.php\n Author Tobias Koppers @sokra\n */\n\n\"use strict\";\n\nvar _classCallCheck = require(\"/home/lenovo/Desktop/chatapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\nvar _createClass = require(\"/home/lenovo/Desktop/chatapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\nvar _require = require(\"webpack-sources\"),\n  ConcatSource = _require.ConcatSource;\nvar Template = require(\"./Template\");\n\n/** @typedef {import(\"./Compilation\")} Compilation */\nvar AmdMainTemplatePlugin = /*#__PURE__*/function () {\n  /**\n   * @param {string} name the library name\n   */\n  function AmdMainTemplatePlugin(name) {\n    _classCallCheck(this, AmdMainTemplatePlugin);\n    /** @type {string} */\n    this.name = name;\n  }\n\n  /**\n   * @param {Compilation} compilation the compilation instance\n   * @returns {void}\n   */\n  _createClass(AmdMainTemplatePlugin, [{\n    key: \"apply\",\n    value: function apply(compilation) {\n      var _this = this;\n      var mainTemplate = compilation.mainTemplate,\n        chunkTemplate = compilation.chunkTemplate;\n      var onRenderWithEntry = function onRenderWithEntry(source, chunk, hash) {\n        var externals = chunk.getModules().filter(function (m) {\n          return m.external;\n        });\n        var externalsDepsArray = JSON.stringify(externals.map(function (m) {\n          return typeof m.request === \"object\" ? m.request.amd : m.request;\n        }));\n        var externalsArguments = externals.map(function (m) {\n          return \"__WEBPACK_EXTERNAL_MODULE_\".concat(Template.toIdentifier(\"\".concat(m.id)), \"__\");\n        }).join(\", \");\n        if (_this.name) {\n          var name = mainTemplate.getAssetPath(_this.name, {\n            hash: hash,\n            chunk: chunk\n          });\n          return new ConcatSource(\"define(\".concat(JSON.stringify(name), \", \").concat(externalsDepsArray, \", function(\").concat(externalsArguments, \") { return \"), source, \"});\");\n        } else if (externalsArguments) {\n          return new ConcatSource(\"define(\".concat(externalsDepsArray, \", function(\").concat(externalsArguments, \") { return \"), source, \"});\");\n        } else {\n          return new ConcatSource(\"define(function() { return \", source, \"});\");\n        }\n      };\n      for (var _i = 0, _arr = [mainTemplate, chunkTemplate]; _i < _arr.length; _i++) {\n        var template = _arr[_i];\n        template.hooks.renderWithEntry.tap(\"AmdMainTemplatePlugin\", onRenderWithEntry);\n      }\n      mainTemplate.hooks.globalHashPaths.tap(\"AmdMainTemplatePlugin\", function (paths) {\n        if (_this.name) {\n          paths.push(_this.name);\n        }\n        return paths;\n      });\n      mainTemplate.hooks.hash.tap(\"AmdMainTemplatePlugin\", function (hash) {\n        hash.update(\"exports amd\");\n        hash.update(_this.name);\n      });\n    }\n  }]);\n  return AmdMainTemplatePlugin;\n}();\nmodule.exports = AmdMainTemplatePlugin;","map":null,"metadata":{},"sourceType":"script"}